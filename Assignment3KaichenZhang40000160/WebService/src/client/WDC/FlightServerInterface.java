
package client.WDC;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import client.ServerInterface;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "FlightServerInterface", targetNamespace = "http://servers/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface FlightServerInterface extends ServerInterface{


    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @param arg6
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "bookFlight", targetNamespace = "http://servers/", className = "client.WDC.BookFlight")
    @ResponseWrapper(localName = "bookFlightResponse", targetNamespace = "http://servers/", className = "client.WDC.BookFlightResponse")
    @Action(input = "http://servers/FlightServerInterface/bookFlightRequest", output = "http://servers/FlightServerInterface/bookFlightResponse")
    public String bookFlight(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        String arg5,
        @WebParam(name = "arg6", targetNamespace = "")
        int arg6);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getBookledFlightCount", targetNamespace = "http://servers/", className = "client.WDC.GetBookledFlightCount")
    @ResponseWrapper(localName = "getBookledFlightCountResponse", targetNamespace = "http://servers/", className = "client.WDC.GetBookledFlightCountResponse")
    @Action(input = "http://servers/FlightServerInterface/getBookledFlightCountRequest", output = "http://servers/FlightServerInterface/getBookledFlightCountResponse")
    public String getBookledFlightCount(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editRecord", targetNamespace = "http://servers/", className = "client.WDC.EditRecord")
    @ResponseWrapper(localName = "editRecordResponse", targetNamespace = "http://servers/", className = "client.WDC.EditRecordResponse")
    @Action(input = "http://servers/FlightServerInterface/editRecordRequest", output = "http://servers/FlightServerInterface/editRecordResponse")
    public String editRecord(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "transferReservation", targetNamespace = "http://servers/", className = "client.WDC.TransferReservation")
    @ResponseWrapper(localName = "transferReservationResponse", targetNamespace = "http://servers/", className = "client.WDC.TransferReservationResponse")
    @Action(input = "http://servers/FlightServerInterface/transferReservationRequest", output = "http://servers/FlightServerInterface/transferReservationResponse")
    public String transferReservation(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

}
